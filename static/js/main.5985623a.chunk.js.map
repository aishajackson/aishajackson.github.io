{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/About.js","Components/Portfolio.js","Components/Contact.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","this","props","data","networks","social","map","network","key","name","href","url","target","rel","className","id","title","Component","Footer","About","profilepic","image","bio","src","alt","Portfolio","projects","projectImage","category","Contact","action","method","htmlFor","type","defaultValue","size","onChange","handleChange","cols","rows","App","state","foo","resumeData","ReactGA","initialize","pageview","window","location","pathname","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","alert","getResumeData","main","portfolio","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5985623a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n\n    if(this.props.data){\n      var networks= this.props.data.social.map(network => {\n        return <li key={network.name}><a href={network.url} target=\"_blank\" rel=\"noopener noreferrer\"><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <header id=\"home\">\n\n      <nav id=\"nav-wrap\">\n\n         <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n\t      <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n         <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n\t         {/* <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li> */}\n            <li><a className=\"smoothscroll\" href=\"#portfolio\">Portfolio</a></li>\n            <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n         </ul>\n\n      </nav>\n\n      <div className=\"row banner\">\n         <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">Hey, I'm Aisha.</h1>\n            <h3>I'm a <span>Software Engineer</span> based in Portland, OR.</h3>\n            <hr />\n            <ul className=\"social\">\n               {networks}\n            </ul>\n         </div>\n      </div>\n\n      <p className=\"scrolldown\">\n         <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n      </p>\n\n   </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n\n    if(this.props.data){\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <footer>\n\n     <div className=\"row\">\n        <div className=\"twelve columns\">\n           <ul className=\"social-links\">\n              {networks}\n           </ul>\n\n           <ul className=\"copyright\">\n              <li>&copy; Copyright 2020 Aisha Jackson</li>\n              <li>Design by <a title=\"Styleshout\" href=\"http://www.styleshout.com/\">Styleshout</a></li>\n           </ul>\n\n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\n     </div>\n  </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n\n    if(this.props.data){\n      var profilepic= \"images/\"+this.props.data.image;\n      var bio = this.props.data.bio;\n    }\n\n    return (\n      <section id=\"about\">\n      <div className=\"row\">\n         <div className=\"three columns\">\n            <img className=\"profile-pic\"  src={profilepic} alt=\"\" />\n         </div>\n         <div className=\"nine columns main-col\">\n            <h2>About Me</h2>\n\n            <p>{bio}</p>\n            <div className=\"row\">\n               <div className=\"columns download\">\n                  <p>\n                     <a href=\"https://bit.ly/2rD9mJQ\" className=\"button\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-download\"></i>Resume</a>\n                  </p>\n               </div>\n            </div>\n         </div>\n      </div>\n\n   </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\nclass Portfolio extends Component {\n  render() {\n\n    if(this.props.data){\n      var projects = this.props.data.projects.map(function(projects){\n        var projectImage = 'images/portfolio/'+projects.image;\n        return <div key={projects.title} className=\"columns portfolio-item\">\n           <div className=\"item-wrap\">\n            <a href={projects.url} title={projects.title}>\n               <img alt={projects.title} src={projectImage} />\n               <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                 <h5>{projects.title}</h5>\n                     <p>{projects.category}</p>\n                  </div>\n                </div>\n              <div className=\"link-icon\"><i className=\"fa fa-link\"></i></div>\n            </a>\n          </div>\n        </div>\n      })\n    }\n\n    return (\n      <section id=\"portfolio\">\n\n      <div className=\"row\">\n\n         <div className=\"twelve columns collapsed\">\n\n            <h1>Stay Tuned for Some of My Work!</h1>\n\n            {/* <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n                {projects}\n            </div> */}\n          </div>\n      </div>\n   </section>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React, { Component } from 'react';\n\nclass Contact extends Component {\n  render() {\n\n    return (\n      <section id=\"contact\">\n\n         <div className=\"row section-head\">\n\n            <div className=\"two columns header-col\">\n\n               <h1><span>Get In Touch.</span></h1>\n\n            </div>\n\n            <div className=\"ten columns\">\n\n                  <p className=\"lead\">Please fill out the form below!</p>\n\n            </div>\n\n         </div>\n\n         <div className=\"row\">\n            <div className=\"ten columns\">\n\n               <form action=\"https://formspree.io/xgeoprbj\" method=\"post\" id=\"contactForm\" name=\"contactForm\">\n\t\t\t\t\t<fieldset>\n\n                  <div>\n\t\t\t\t\t\t   <label htmlFor=\"contactName\">Name <span className=\"required\">*</span></label>\n\t\t\t\t\t\t   <input type=\"text\" defaultValue=\"\" size=\"35\" id=\"contactName\" name=\"contactName\" onChange={this.handleChange}/>\n                  </div>\n\n                  <div>\n\t\t\t\t\t\t   <label htmlFor=\"contactEmail\">Email <span className=\"required\">*</span></label>\n\t\t\t\t\t\t   <input type=\"text\" defaultValue=\"\" size=\"35\" id=\"contactEmail\" name=\"_replyto\" onChange={this.handleChange}/>\n                  </div>\n\n                  <div>\n\t\t\t\t\t\t   <label htmlFor=\"contactSubject\">Subject <span className=\"required\">*</span></label>\n\t\t\t\t\t\t   <input type=\"text\" defaultValue=\"\" size=\"35\" id=\"contactSubject\" name=\"contactSubject\" onChange={this.handleChange}/>\n                  </div>\n\n                  <div>\n                     <label htmlFor=\"contactMessage\">Message <span className=\"required\">*</span></label>\n                     <textarea cols=\"50\" rows=\"15\" id=\"contactMessage\" name=\"contactMessage\"></textarea>\n                  </div>\n\n                  <div>\n                     <button className=\"submit\">Submit</button>\n                     <span id=\"image-loader\">\n                        <img alt=\"\" src=\"images/loader.gif\" />\n                     </span>\n                  </div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t   </form>\n\n           <div id=\"message-warning\"> Error boy</div>\n\t\t\t\t   <div id=\"message-success\">\n                  <i className=\"fa fa-check\"></i>Your message was sent, thank you!<br />\n\t\t\t\t   </div>\n           </div>\n      </div>\n   </section>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport $ from 'jquery';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport About from './Components/About';\n// import Resume from './Components/Resume';\nimport Portfolio from './Components/Portfolio';\nimport Contact from './Components/Contact';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      foo: 'bar',\n      resumeData: {}\n    };\n\n    ReactGA.initialize('UA-110570651-1');\n    ReactGA.pageview(window.location.pathname);\n\n  }\n\n  getResumeData(){\n    $.ajax({\n      url:'/resumeData.json',\n      dataType:'json',\n      cache: false,\n      success: function(data){\n        this.setState({resumeData: data});\n      }.bind(this),\n      error: function(xhr, status, err){\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount(){\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main}/>\n        <About data={this.state.resumeData.main}/>\n        {/* <Resume data={this.state.resumeData.resume}/> */}\n        <Portfolio data={this.state.resumeData.portfolio}/>\n        <Contact data={this.state.resumeData.main}/>\n        <Footer data={this.state.resumeData.main}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}